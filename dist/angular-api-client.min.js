/*! angular-api-client, built 2016-12-12T20:46:55-0500 | (C) 2016 Jeff Lambert | License: MIT */
!function(){"use strict";var app=angular.module("angular-api-client",["angular-utils","angular-config","angular-cache","angular-auth","base64"]);app.service("api",["$http","$interval","$location","$q","$rootScope","$timeout","$window","auth","cache","common","angular.config","localStorage",function($http,$interval,$location,$q,$rootScope,$timeout,$window,auth,cache,common,config,localStorage){function get(opts){var promise=$q.defer(),req={method:"get",url:buildUrl(opts),headers:buildHeaders(auth.user())},cacheHit=config.app.caching_enabled?cache.lookup(req,opts):null;return cacheHit?(promise.resolve(cacheHit),logInfo("Resolved data from cache",cacheHit,!0),promise.promise):(send(req).then(function(data){return!data.data||data.meta&&!data.meta.cursor?(logError("Invalid API Response Format",data,!0),promise.reject(data.data)):(logInfo("Resolved data from server",data.data.data,!0),data.data.meta?promise.resolve(data.data):promise.resolve(data.data.data),config.app.caching_enabled&&(data.meta&&data.data.data.length||data.data.data)&&cache.insert(data.data,req,opts)),data.data},function(data){resolveError(data,promise)}),promise.promise)}function post(opts){var promise=$q.defer(),req={method:"post",url:buildUrl(opts),headers:buildHeaders(auth.user())};return opts.data&&(req.data=opts.data),send(req).then(function(data){logSuccess("Data Resolved",data.data,!0),cache.insert(data.data,req),promise.resolve(data.data)},function(data){resolveError(data,promise)}),promise.promise}function clearCache(endpoint){cache.clear(endpoint)}function gc(){cache.gc()}function startCollectingGarbage(){config.app.caching_enabled&&config.app.gc_timeout&&$interval(function(){cache.gc()},1e3*config.app.gc_timeout)}function send(req){return $http(req)}function buildHeaders(user){var headers={Accept:"application/json","Content-Type":"application/json"};return user&&user.access_token&&(headers.Authorization="Bearer "+user.access_token),headers}function buildUrl(opts){var url=config.api.provider+"/"+config.api.version+"/"+opts.endpoint,params=[];return opts.params&&Object.keys(opts.params).forEach(function(key){params.push(encodeURIComponent(key)+"="+encodeURIComponent(opts.params[key]))}),url+(params.length?"?"+params.join("&"):"")}function resolveError(data,promise){function rejectCurrent(promise){promise&&promise.reject(data)}switch(data.status){case 400:logError("Client communication error",data.data),rejectCurrent(promise);break;case 401:rejectCurrent(promise),logInfo("Authentication Required",data.data),$rootScope.afterLoginUrl=$location.url(),auth.logout();break;case 403:logWarn("Unauthorized",data.data),rejectCurrent(promise);break;case 404:logWarn("Resource Not Found",data.data),rejectCurrent(promise);break;case 429:logWarn("Slow Down! API is rate limiting",data.data),rejectCurrent(promise);break;case 0:case 500:default:logError("Data Server Error",data.status),rejectCurrent(promise)}}var svc={get:get,post:post,clearCache:clearCache,gc:gc},logSuccess=common.getLogFn("api","success"),logInfo=common.getLogFn("api","info"),logWarn=common.getLogFn("api","warn"),logError=common.getLogFn("api","error");return startCollectingGarbage(),svc}])}(),function(){"use strict";var serviceId="auth",app=angular.module("angular-auth",["angular-utils","angular-config"]);app.service(serviceId,["$http","$location","$q","$timeout","cache","common","angular.config","localStorage",function($http,$location,$q,$timeout,cache,common,config,localStorage){function hasUser(){var identity=user();return identity&&identity.user_id}function login(username,password){if(!username||!password){logError("Username and password are required to login");var defer=$q.defer();return defer.reject({data:{}}),defer.promise}return $http({method:"POST",url:config.auth.provider+config.auth.login_uri,data:{username:username,password:password,grant_type:"password",client_id:config.client.id,client_secret:config.client.secret}}).then(function(data){return sessionStart=Date.now(),data})}function logout(){var identity=user();return cache.clear(),localStorage.clear("identity"),$location.path("/login"),logInfo("Session Closed"),tokenRenewTimeout&&($timeout.cancel(tokenRenewTimeout),tokenRenewTimeout=null),identity.access_token?$http({method:"POST",url:config.auth.provider+config.auth.logout_uri,headers:{Authorization:"Bearer "+identity.access_token}}):(sessionStart=null,$q.defer().resolve())}function registerIdentity(identity){identity.createdAt=parseInt((new Date).getTime()/1e3),localStorage.setObject("identity",identity);var renewTime=.9*identity.expires_in*1e3;Date.now()+renewTime-sessionStart<1e3*config.auth.max_session_ttl?tokenRenewTimeout=$timeout(function(){renewToken()},renewTime):logWarn("Authenticated session expiring soon")}function renewToken(){var identity=user();return identity&&identity.refresh_token?$http({method:"POST",url:config.auth.provider+config.auth.login_uri,data:{grant_type:"refresh_token",client_id:config.client.id,client_secret:config.client.secret,refresh_token:identity.refresh_token}}).then(function(data){logInfo("Access Token Renewed",data.data,!0),registerIdentity(data.data)},function(){logWarn("Access renewal failed, please authenticate"),logout()}):(logInfo("Refresh token not available, please authenticate",null,!0),void logout())}function user(){var user=localStorage.getObject("identity");return user.createdAt+user.expires_in<parseInt((new Date).getTime()/1e3)?null:user}var tokenRenewTimeout,sessionStart,svc={hasUser:hasUser,login:login,logout:logout,registerIdentity:registerIdentity,renewToken:renewToken,user:user},logInfo=common.getLogFn(serviceId,"info"),logError=common.getLogFn(serviceId,"error"),logWarn=common.getLogFn(serviceId,"warn");return svc}])}(),function(){"use strict";var app=angular.module("angular-cache",["angular-utils","angular-config"]);app.service("cache",["$base64","common","angular.config","localStorage",function($base64,common,config,localStorage){function clear(key){key?localStorage.clear(key):localStorage.keys().forEach(function(endpoint){"identity"!==endpoint&&localStorage.clear(endpoint)}),logInfo("Cache Cleared",key,!0)}function evictOldEntries(){config.app.debug&&logInfo("Collecting Garbage",localStorage.space(),!0),localStorage.keys().forEach(function(endpoint){if("identity"!==endpoint){var cache=localStorage.getObject(endpoint),removeIds=[],finallyRemoved=[];if(cache.pages){Object.keys(cache).forEach(function(key){"pages"!==key&&cacheAge(cache[key])>=config.app.cache_ttl&&removeIds.push(key)}),Object.keys(cache.pages).forEach(function(key){"0"!==key&&cache.pages[key].data.intersect(removeIds).length&&(key===cache.pages[0]&&delete cache.pages[0],cache.pages[key].data.forEach(function(id){delete cache[id],finallyRemoved.push(id)}),delete cache.pages[key])}),finallyRemoved.length&&logInfo("Garbage Collected "+finallyRemoved.length+" "+endpoint,finallyRemoved,!0);try{localStorage.setObject(endpoint,cache)}catch(e){quotaExceededError(endpoint,cache)}}}})}function insert(data,request,opts){if(opts&&opts.params&&hasUnimplementedFilters(Object.keys(opts.params)))return null;var curRequest=cacheRequest(request),cacheKey=curRequest.endpoint,cache=localStorage.getObject(cacheKey);if(common.isEmptyObject(cache)&&(cache={pages:{}}),data.meta){var page=[],cursor=data.meta.cursor.current;if(data.data.forEach(function(entity){page.push(entity.id),entity={data:entity,time:parseInt((new Date).getTime()/1e3)},cache[entity.data.id]=entity}),page={data:page,meta:data.meta},!cursor&&data.data.length){var firstPageCursor=encodeURIComponent($base64.encode(data.data[0].created_at));cache.pages[0]=firstPageCursor,cursor=firstPageCursor}cache.pages[cursor]=page,logInfo("Page Cached",page,!0)}else data.time=parseInt((new Date).getTime()/1e3),cache[curRequest.id]=data,logInfo("Entity cached",data,!0);try{localStorage.setObject(cacheKey,cache)}catch(e){quotaExceededError(cacheKey,cache)}}function lookup(request,opts){var curRequest=cacheRequest(request),cacheKey=curRequest.endpoint,cache=localStorage.getObject(cacheKey),page=0;if(opts&&opts.params&&hasUnimplementedFilters(Object.keys(opts.params)))return null;if(!common.isEmptyObject(cache)){if(curRequest.id){if(cache[curRequest.id]&&cacheAge(cache[curRequest.id])<config.app.cache_ttl){var hasAllData=!0;return opts.params&&opts.params.include&&opts.params.include.split(",").forEach(function(include){hasAllData=hasAllData&&checkInclude(include,cache[curRequest.id].data)}),hasAllData?cache[curRequest.id].data:null}return null}if(curRequest.query&&curRequest.query.cursor&&(page=curRequest.query.cursor),cache.pages[page]){var out=[],expired=!1;return 0===page&&(page=cache.pages[page]),cache.pages[page].data.forEach(function(id){(!id||cache[id]&&cacheAge(cache[id])>config.app.cache_ttl)&&(expired=!0),out.push(cache[id].data)}),expired?null:{data:out,meta:cache.pages[page].meta}}}return null}function checkInclude(include,data){if(!include.trim())return!0;var recursiveIncludes=include.split("."),curInclude=recursiveIncludes.shift();return data[curInclude]?data[curInclude]&&(recursiveIncludes.length?checkInclude(recursiveIncludes.join("."),data[curInclude]):!0):!1}function cacheRequest(req){var request=req.url.replace(config.api.provider+"/"+config.api.version+"/","").split("?"),endpoint=request[0].split("/"),query=request[1]?common.queryStringToJson(request[1]):{},out={endpoint:endpoint[0],query:query,id:null};return endpoint.length>1&&(out.id=endpoint[1]),out}function cacheAge(cacheEntry){var now=parseInt((new Date).getTime()/1e3);return now-cacheEntry.time}function hasUnimplementedFilters(filters){var i,len=filters.length;for(i=0;len>i;++i)if(!implementedFilters.contains(filters[i]))return!0;return!1}function quotaExceededError(key,value){logWarn("Storage quota exceeded, flushing entity cache",key,!0),localStorage.clear(key)}var svc={clear:clear,gc:evictOldEntries,insert:insert,lookup:lookup},logInfo=common.getLogFn("cache","info"),logWarn=common.getLogFn("cache","warn"),implementedFilters=["cursor","include","number"];return svc}])}();